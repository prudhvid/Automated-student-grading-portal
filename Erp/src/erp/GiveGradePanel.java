/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package erp;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.BoxLayout;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ScrollPaneLayout;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import sun.awt.VariableGridLayout;

/**
 *
 * @author Prudhvi
 */
public class GiveGradePanel extends javax.swing.JPanel
{

    /**
     * Creates new form GiveGradeSheets
     */
    TabelModel model;
    JTable table;
    List<Gradesheet> list;
    JComboBox[] comboBoxArray;
    public GiveGradePanel() {
        initComponents();
        comboBoxArray=new JComboBox[100];
         JLabel[][] labelArray=new JLabel[100][2];
//        model=new TabelModel();
//        table=new JTable(model);
//        table.setVisible(true);
//        ScrollPane.getViewport().add(table);
//        table.setRowHeight(40);
//        table.setFont(table.getFont().deriveFont(20.0f));
//        table.setAutoResizeMode(30);
//        table.setEditingColumn(2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ScrollPane = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        Okbutton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Give Grades");

        jPanel1.setLayout(new java.awt.GridLayout());
        ScrollPane.setViewportView(jPanel1);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Okbutton.setText("OK");
        Okbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(Okbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 773, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(203, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Okbutton))
                .addContainerGap(50, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        
        //<editor-fold defaultstate="collapsed" desc="comment">
        
        jPanel1.removeAll();
        
        list=s.em.createQuery("SELECT g FROM Gradesheet g WHERE g.teacherid=:teacher")
                .setParameter("teacher", RegisterPanel.loggedinTeacher).getResultList();
        
        jPanel1.setMaximumSize(new Dimension( 120,list.size()));
        
        jPanel1.setLayout(new GridLayout(0,3,200,200));
        int i=0;
        
       
        
        
        for(Gradesheet gs:list)
        {
//            labelArray[i][0].setText(gs.getRollNo().getRollNo());
//            labelArray[i][1].setText(gs.getRollNo().getName());
            JLabel label=new JLabel(gs.getRollNo().getRollNo());
            JLabel label2=new JLabel(gs.getRollNo().getName());
            JComboBox c=new JComboBox();
            c.setMaximumSize(new Dimension(40, 20));
            c.addItem("EX");
            c.addItem('A');
            c.addItem('B');
            c.addItem('C');
            c.addItem('D');
            c.addItem('P');
            c.addItem('F');
            comboBoxArray[i]=c;
            jPanel1.add(label);
            jPanel1.add(label2);
            jPanel1.add(comboBoxArray[i]);
            i++;
        }
        
        
        
        
        
//</editor-fold>
         
    }//GEN-LAST:event_formComponentShown

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JPanel parent=(JPanel) this.getParent();
        CardLayout cl = (CardLayout)(parent.getLayout());
        cl.show(parent, s.TEACHER_LOGGEDINPANEL);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void OkbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkbuttonActionPerformed
        addToDataBase(comboBoxArray);
        JOptionPane.showMessageDialog(this, "GRADES ADDED SUCCESSFULLY");
    }//GEN-LAST:event_OkbuttonActionPerformed

    
    
    private void addToDataBase(JComboBox[] comboBoxArray) {
        int i=0;
        s.em.getTransaction().begin();
        for(Gradesheet gs:list)
        {
            gs.setGrade(getGrade(comboBoxArray[i].getSelectedIndex()));
            i++;
            s.em.persist(gs);
        }
        s.em.getTransaction().commit();
    }

    private int getGrade(int index) {
        int r;
        switch(index)
        {
            case 0:r=10;  
                break;
            case 1:r=9;
                break;
            case 2:r=8;
                break;
            case 3:r=7;
                break;
            case 4:r=6;
                break;
            case 5:r=5;
                break;
            default:r=0;
                
        }
        return r;
    }
    
    
    
    class TabelModel extends AbstractTableModel{

    public String[] colNames={"RollNo","Name","Grade"};
    public Object[][] data=new Object[100][3];
    
    @Override
    public int getRowCount() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        return data.length;
       
    }

    @Override
    public int getColumnCount() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        return colNames.length;
    }

    @Override
    public Object getValueAt(int i, int i1) throws ArrayIndexOutOfBoundsException{
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        try{
        return data[i][i1];
        }
        catch(ArrayIndexOutOfBoundsException a)
        {
            System.err.println("i="+i+"   i1="+i1);
        }
        return null;
    }
    @Override
    public String getColumnName(int index) {
        return colNames[index];
    }
//    @Override
//    public Class getColumnClass(int c) {
//            return getValueAt(0, c-1).getClass();
//        }
    
    @Override
    public void setValueAt(Object value, int row, int col) {
            if(col==2)
            {
                TableColumn sportColumn = table.getColumnModel().getColumn(getColumnCount()-1);
                JComboBox comboBox = new JComboBox();
                comboBox.addItem("Ex");
                comboBox.addItem("A");
                comboBox.addItem("B");
                comboBox.addItem("C");
                comboBox.addItem("D");
                comboBox.addItem("P");
                comboBox.addItem("F");
                sportColumn.setCellEditor(new DefaultCellEditor(comboBox));
                DefaultTableCellRenderer renderer =
                                           new DefaultTableCellRenderer();
                renderer.setToolTipText("Click for combo box");
                sportColumn.setCellRenderer(renderer);
                data[row][col]=comboBox;
                fireTableCellUpdated(row, col);
            }
            else
            {
                data[row][col]=value;
                fireTableCellUpdated(row, col);
            }
        }
    @Override
    public boolean isCellEditable(int row, int col) {
            //Note that the data/cell address is constant,
            //no matter where the cell appears onscreen.
            if (col < 2) {
                return false;
            } else {
                return true;
            }
        }
}   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Okbutton;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}


